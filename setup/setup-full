#!/bin/sh


# ----------------------------------------------------------------------------
readonly SETUP=${0##*/}
readonly APPLICATION='name'
readonly PREREQUISITES='bash'
readonly PLATFORMS='debian ubuntu'
# ----------------------------------------------------------------------------


# setup functions -->
setup_usage () {
  echo "\
Usage:
  $SETUP argument

Arguments:
  help
    display this help and exit
  requirement
    display prerequisite external commands
  configure
    pre-install tasks
  install
    install '$APPLICATION'
  uninstall
    uninstall '$APPLICATION'

Exemples:
  $SETUP configure
  $SETUP install"

  exit 0
}

setup_error () {
  [ -n "${*}" ] && echo "${*}"

  exit 1
}

setup_prerequisites () {
  echo "\
Prerequisites: $PREREQUISITES
Supported platforms: $PLATFORMS"

  exit 0
}

setup_check_prerequisites () {
  if [ -f /etc/os-release ]; then
    # get OS
    os='false'
    while IFS='=' read -r key value; do
      if [ "$key" = 'ID' ]; then
        os=$value
        break
      fi
    done < /etc/os-release
    # check if OS is supported
    for platform in $PLATFORMS; do
      if [ "$os" = "$platform" ]; then
        os='true'
        break
      fi
    done
    # abort if OS is unsupported
    if [ "$os" != 'true' ]; then
      setup_error 'unsupported OS'
    fi
  fi

  for cmd in $PREREQUISITES; do
    command -v $cmd >/dev/null
    [ $? -ne 0 ] && setup_error "you need the '$cmd' command"
  done
}

setup_configure () {
  echo "configure"
}

setup_install () {
  echo "install"
}

setup_uninstall () {
  echo "uninstall"
}
# setup functions <--


# run as root -->
if [ "$USER" != 'root' ]; then
  [ "$LOGNAME" != 'root' ] && setup_error "please run as root"
fi
# run as root <--


# parse cli -->
case $1 in
  help)        setup_usage         ;;
  requirement) setup_prerequisites ;;
  configure)   setup_configure     ;;
  install)
    setup_check_prerequisites
    setup_install                  ;;
  uninstall)   setup_uninstall     ;;
  *)           setup_error 'invalid or missing argument' ;;
esac
# parse cli <--


exit 0
